openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/signup:
    post:
      summary: 'User Registration'
      operationId: userRegistration
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The confirm password field must match password.'
                  errors:
                    confirm_password:
                      - 'The confirm password field must match password.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The confirm password field must match password.'
                  errors:
                    type: object
                    properties:
                      confirm_password:
                        type: array
                        example:
                          - 'The confirm password field must match password.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Auth routes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ztzplusaieiskwvhimjmwbkvj
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jadon.rosenbaum@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters. Must not be greater than 255 characters.'
                  example: 'D]P\oiJ;?p'
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: voluptatem
              required:
                - name
                - email
                - password
                - confirm_password
      security: []
  /api/login:
    post:
      summary: Login
      operationId: login
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Auth routes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ratke.crawford@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '8]c.$='
              required:
                - email
                - password
      security: []
  /api/profile/data:
    get:
      summary: 'Get Profile Data'
      operationId: getProfileData
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Profile
  /api/profile/update:
    post:
      summary: 'Update Profile'
      operationId: updateProfile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: voluptatem
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ezqtxtsntkptwxrhsbuxhiyel
                dob:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-14'
                phone:
                  type: string
                  description: 'Must be 11 characters.'
                  example: umeybfuvsrh
              required:
                - id
                - name
  /api/reset-password-link:
    post:
      summary: 'Sending reset password link'
      operationId: sendingResetPasswordLink
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Reset password'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: myles35@example.com
              required:
                - email
      security: []
  /api/reset-password:
    post:
      summary: 'Password reset'
      operationId: passwordReset
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Reset password'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: tempora
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '0Yt<5G,"M~1Z!9'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jmclaughlin@example.net
              required:
                - token
                - password
                - email
      security: []
  /api/resume/contact:
    post:
      summary: 'create or update contact'
      operationId: createOrUpdateContact
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: error
                first_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lijiapkqvmep
                last_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: neqi
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: maymie26@example.com
                job_title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zfpbdeffnc
                phone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: syecs
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fastfld
                linkedin_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pcfitnpbee
                facebook_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dezultkpqeyazcopm
                twitter_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hokktjkdevmfejaleo
                website:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kdmedoxkoxvehjh
              required:
                - id
                - first_name
                - last_name
                - email
                - job_title
                - phone
                - location
  /api/resume/education:
    post:
      summary: 'create or update education'
      operationId: createOrUpdateEducation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kmjzjtozddcjndeeucooqn
                school_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: db
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eghpuykysszjle
                feild_of_study:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zwvtbtf
                start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-14'
                active:
                  type: boolean
                  description: ''
                  example: true
                end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>active</code> is <code>true</code>.'
                  example: '2023-05-14'
              required:
                - name
                - school_name
                - start_date
                - active
  /api/resume/skill:
    post:
      summary: 'Skills create or update'
      operationId: skillsCreateOrUpdate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Resume
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                skills:
                  type: array
                  description: ''
                  example:
                    - enim
                  items:
                    type: string
    delete:
      summary: 'Delete skill'
      operationId: deleteSkill
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Resume
tags:
  -
    name: 'Auth routes'
    description: ''
  -
    name: Profile
    description: ''
  -
    name: 'Reset password'
    description: ''
  -
    name: Resume
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []

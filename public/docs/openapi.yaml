openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/signup:
    post:
      summary: 'User Registration'
      operationId: userRegistration
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The confirm password field must match password.'
                  errors:
                    confirm_password:
                      - 'The confirm password field must match password.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The confirm password field must match password.'
                  errors:
                    type: object
                    properties:
                      confirm_password:
                        type: array
                        example:
                          - 'The confirm password field must match password.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Auth routes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: srupsctigskgfrxwxxtqyf
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: koepp.adolfo@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters. Must not be greater than 255 characters.'
                  example: h^RD(8(ej(!x`g-A.
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: assumenda
              required:
                - name
                - email
                - password
                - confirm_password
      security: []
  /api/login:
    post:
      summary: Login
      operationId: login
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Auth routes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: wwest@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '<!>MQbZ'
              required:
                - email
                - password
      security: []
  /api/profile/data:
    get:
      summary: 'Get Profile Data'
      operationId: getProfileData
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: ''
                  data:
                    id: ac49ffdc-8568-481c-8587-5cb3f846af5f
                    name: 'test update'
                    email: hassanshahriar18@gmail.com
                    user_type: User
                    login_type: default
                    dob: '2022-01-01'
                    phone: '11111111111'
                    created_at: '2023-05-11T07:16:47.000000Z'
                    updated_at: '2023-05-15T11:05:59.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ac49ffdc-8568-481c-8587-5cb3f846af5f
                      name:
                        type: string
                        example: 'test update'
                      email:
                        type: string
                        example: hassanshahriar18@gmail.com
                      user_type:
                        type: string
                        example: User
                      login_type:
                        type: string
                        example: default
                      dob:
                        type: string
                        example: '2022-01-01'
                      phone:
                        type: string
                        example: '11111111111'
                      created_at:
                        type: string
                        example: '2023-05-11T07:16:47.000000Z'
                      updated_at:
                        type: string
                        example: '2023-05-15T11:05:59.000000Z'
                      deleted_at:
                        type: string
                        example: null
      tags:
        - Profile
  /api/profile/update:
    post:
      summary: 'Update Profile'
      operationId: updateProfile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected id is invalid.'
                  errors:
                    id:
                      - 'The selected id is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected id is invalid.'
                  errors:
                    type: object
                    properties:
                      id:
                        type: array
                        example:
                          - 'The selected id is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: et
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cdlclnqgxqnqqqqlsk
                dob:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-15'
                phone:
                  type: string
                  description: 'Must be 11 characters.'
                  example: rjutvznxgbx
              required:
                - id
                - name
  /api/reset-password-link:
    post:
      summary: 'Sending reset password link'
      operationId: sendingResetPasswordLink
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Reset password'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: wkirlin@example.org
              required:
                - email
      security: []
  /api/reset-password:
    post:
      summary: 'Password reset'
      operationId: passwordReset
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected email is invalid.'
                  errors:
                    email:
                      - 'The selected email is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected email is invalid.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The selected email is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - 'Reset password'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: ab
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: "MW]5p'7g?"
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: zieme.jasper@example.net
              required:
                - token
                - password
                - email
      security: []
  /api/resume/contact:
    post:
      summary: 'create or update contact'
      operationId: createOrUpdateContact
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The selected id is invalid.'
                  errors:
                    id:
                      - 'The selected id is invalid.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The selected id is invalid.'
                  errors:
                    type: object
                    properties:
                      id:
                        type: array
                        example:
                          - 'The selected id is invalid.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: consequatur
                first_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nlj
                last_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: x
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: shanie32@example.org
                job_title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qq
                phone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gwkvvgth
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fhlnslhogmsznizrdm
                linkedin_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tpvsfenhpmkkocetujcrflqdh
                facebook_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pu
                twitter_link:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bpxiqigaexkvdxxjro
                website:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ajzchwaktznrxrp
              required:
                - id
                - first_name
                - last_name
                - email
                - job_title
                - phone
                - location
  /api/resume/education:
    post:
      summary: 'create or update education'
      operationId: createOrUpdateEducation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: ''
                  data:
                    name: eattcpgqwjqpvzoqnwgbv
                    school_name: zqyqaie
                    location: kmkrsrjsahliiblqoubej
                    feild_of_study: vhxmu
                    start_date: '2023-05-15'
                    active: false
                    end_date: '2023-05-15'
                    user_id: ac49ffdc-8568-481c-8587-5cb3f846af5f
                    id: fa951869-8a12-4c8c-a011-8eaef5b81cdd
                    updated_at: '2023-05-15T18:17:01.000000Z'
                    created_at: '2023-05-15T18:17:01.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: eattcpgqwjqpvzoqnwgbv
                      school_name:
                        type: string
                        example: zqyqaie
                      location:
                        type: string
                        example: kmkrsrjsahliiblqoubej
                      feild_of_study:
                        type: string
                        example: vhxmu
                      start_date:
                        type: string
                        example: '2023-05-15'
                      active:
                        type: boolean
                        example: false
                      end_date:
                        type: string
                        example: '2023-05-15'
                      user_id:
                        type: string
                        example: ac49ffdc-8568-481c-8587-5cb3f846af5f
                      id:
                        type: string
                        example: fa951869-8a12-4c8c-a011-8eaef5b81cdd
                      updated_at:
                        type: string
                        example: '2023-05-15T18:17:01.000000Z'
                      created_at:
                        type: string
                        example: '2023-05-15T18:17:01.000000Z'
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eattcpgqwjqpvzoqnwgbv
                school_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zqyqaie
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kmkrsrjsahliiblqoubej
                feild_of_study:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vhxmu
                start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-15'
                active:
                  type: boolean
                  description: ''
                  example: false
                end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>active</code> is <code>true</code>.'
                  example: '2023-05-15'
              required:
                - name
                - school_name
                - start_date
                - active
  /api/resume/skill:
    post:
      summary: 'Skills create or update'
      operationId: skillsCreateOrUpdate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  status_code: 400
                  message: 'The skills.0.name field is required.'
                  errors:
                    skills.0.name:
                      - 'The skills.0.name field is required.'
                  data: []
                properties:
                  status:
                    type: boolean
                    example: false
                  status_code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'The skills.0.name field is required.'
                  errors:
                    type: object
                    properties:
                      skills.0.name:
                        type: array
                        example:
                          - 'The skills.0.name field is required.'
                        items:
                          type: string
                  data:
                    type: array
                    example: []
      tags:
        - Resume
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                skills:
                  type: array
                  description: ''
                  example:
                    - laboriosam
                  items:
                    type: string
  '/api/resume/skill/{skill_id}':
    delete:
      summary: 'Delete skill'
      operationId: deleteSkill
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Resume
    parameters:
      -
        in: path
        name: skill_id
        description: 'The ID of the skill.'
        example: hic
        required: true
        schema:
          type: string
  /api/resume/objective:
    post:
      summary: 'create or update objective'
      operationId: createOrUpdateObjective
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: ''
                  data:
                    id: 2a44f407-d2fa-4892-8bfb-6db6999381d7
                    details: kkxshifwnswstzozwqnuhccjtpzcvllzvcdwhpopqeicpbthbbmhgnagnbkzfskikqfsykjz
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 2a44f407-d2fa-4892-8bfb-6db6999381d7
                      details:
                        type: string
                        example: kkxshifwnswstzozwqnuhccjtpzcvllzvcdwhpopqeicpbthbbmhgnagnbkzfskikqfsykjz
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                details:
                  type: string
                  description: 'Must be at least 20 characters.'
                  example: kkxshifwnswstzozwqnuhccjtpzcvllzvcdwhpopqeicpbthbbmhgnagnbkzfskikqfsykjz
              required:
                - details
  /api/resume/project:
    post:
      summary: 'create or update project'
      operationId: createOrUpdateProject
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: ''
                  data:
                    id: e87a49a1-d86a-4865-af54-afd284c8eb12
                    title: kklvkiyfwmaiqdpqjinbwwy
                    role: okbdekkfrcyemxrttgz
                    start_date: '2023-05-15'
                    end_date: '2023-05-15'
                    details: gbqeljshqppolxohjdipwfuwnquzhizbogysrsjdiledpzbnkbminerkvtone
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ''
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: e87a49a1-d86a-4865-af54-afd284c8eb12
                      title:
                        type: string
                        example: kklvkiyfwmaiqdpqjinbwwy
                      role:
                        type: string
                        example: okbdekkfrcyemxrttgz
                      start_date:
                        type: string
                        example: '2023-05-15'
                      end_date:
                        type: string
                        example: '2023-05-15'
                      details:
                        type: string
                        example: gbqeljshqppolxohjdipwfuwnquzhizbogysrsjdiledpzbnkbminerkvtone
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kklvkiyfwmaiqdpqjinbwwy
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: okbdekkfrcyemxrttgz
                start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-15'
                end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-15'
                details:
                  type: string
                  description: 'Must be at least 10 characters.'
                  example: gbqeljshqppolxohjdipwfuwnquzhizbogysrsjdiledpzbnkbminerkvtone
              required:
                - title
                - details
  '/api/resume/project/{project_id}':
    delete:
      summary: 'Delete project'
      operationId: deleteProject
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Resume
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: illum
        required: true
        schema:
          type: string
  /api/resume/experience:
    post:
      summary: 'create & update experience'
      operationId: createUpdateExperience
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  status_code: 200
                  message: 'Successfully stored'
                  data:
                    id: 1b45c428-fa68-48c6-8ff8-36784c33d878
                    company_name: vjgrxwfdqlhhwukezcr
                    start_date: '2023-05-15'
                    title: oyp
                    location: dflcvsyuiobiaeprkz
                    responsibilities: iure
                    end_date: '2023-05-15'
                    active: true
                properties:
                  status:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Successfully stored'
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 1b45c428-fa68-48c6-8ff8-36784c33d878
                      company_name:
                        type: string
                        example: vjgrxwfdqlhhwukezcr
                      start_date:
                        type: string
                        example: '2023-05-15'
                      title:
                        type: string
                        example: oyp
                      location:
                        type: string
                        example: dflcvsyuiobiaeprkz
                      responsibilities:
                        type: string
                        example: iure
                      end_date:
                        type: string
                        example: '2023-05-15'
                      active:
                        type: boolean
                        example: true
      tags:
        - Resume
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                company_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vjgrxwfdqlhhwukezcr
                job_title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: oyp
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dflcvsyuiobiaeprkz
                start_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2023-05-15'
                active:
                  type: boolean
                  description: ''
                  example: true
                responsibilities:
                  type: string
                  description: ''
                  example: iure
                end_date:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>. This field is required when <code>active</code> is <code>true</code>.'
                  example: '2023-05-15'
              required:
                - company_name
                - job_title
                - start_date
                - active
tags:
  -
    name: 'Auth routes'
    description: ''
  -
    name: Profile
    description: ''
  -
    name: 'Reset password'
    description: ''
  -
    name: Resume
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
